name: Build APK
on:
  push:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk

    steps:
      # 0) Ensure checkout uses git (avoid REST+tar fallback)
      - name: Ensure git & tar (pre-checkout)
        run: |
          set -euxo pipefail
          sudo apt-get update -y
          sudo apt-get install -y git tar ca-certificates
          git --version
          tar --version

      - name: Check Out Repository
        uses: actions/checkout@v4

      # 1) Java & Python
      - name: Set Up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set Up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 2) System dependencies (Buildozer-required + safe extras)
      - name: Install System Dependencies
        run: |
          set -euxo pipefail
          sudo apt-get update -y
          sudo apt-get install -y \
            zip unzip wget curl ca-certificates \
            autoconf libtool pkg-config zlib1g-dev \
            libncurses5-dev libncursesw5-dev libtinfo5 \
            cmake libffi-dev libssl-dev \
            automake libtool-bin autopoint m4 build-essential \
            patch rsync

      # 3) Buildozer & Cython (pin Cython to avoid 3.x issues)
      - name: Install Buildozer & Cython
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          pip install buildozer==1.5.0 "Cython==0.29.33" wheel

      # 4) Android cmdline-tools
      - name: Install Android cmdline-tools
        run: |
          set -euxo pipefail
          sudo mkdir -p "$ANDROID_SDK_ROOT"
          sudo chown -R "$USER:$USER" "$ANDROID_SDK_ROOT"
          cd "$ANDROID_SDK_ROOT"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-11076708_latest.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ || true

      # 5) Accept licenses (explicit, non-interactive)
      - name: Accept Android SDK licenses
        run: |
          set -euxo pipefail
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          sdkmanager --version
          printf 'y\n%.0s' {1..60} | sdkmanager --licenses

      # 6) Install required SDK packages (API 35 + Build-Tools 35.0.0)
      - name: Install Android SDK packages
        run: |
          set -euxo pipefail
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"
          # Add Android tools to PATH *after* install so checkout wasn't affected
          echo "$ANDROID_SDK_ROOT/build-tools/35.0.0" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

      # 6.1) p4a compatibility: create legacy tools/bin pointing to cmdline-tools
      - name: Create legacy tools/bin for sdkmanager (p4a compatibility)
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_SDK_ROOT/tools/bin"
          ln -sf "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_SDK_ROOT/tools/bin/sdkmanager"
          ln -sf "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager" "$ANDROID_SDK_ROOT/tools/bin/avdmanager"
          ls -l "$ANDROID_SDK_ROOT/tools/bin"

      # 7) NDK r25b (p4a "recommended")
      - name: Set Up Android NDK r25b
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25b
          link-to-sdk: true

      # 8) Tell p4a EXACTLY where the SDK/NDK are
      - name: Wire SDK/NDK env for p4a
        run: |
          set -euxo pipefail
          echo "ANDROIDSDK=${ANDROID_SDK_ROOT}" >> $GITHUB_ENV
          echo "ANDROIDNDK=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "ANDROIDAPI=35" >> $GITHUB_ENV
          echo "NDKAPI=24" >> $GITHUB_ENV

      # (Optional but robust) Write SDK/NDK paths into buildozer.spec too
      - name: Pin SDK/NDK paths in buildozer.spec
        run: |
          set -euxo pipefail
          SDK="/usr/local/lib/android/sdk"
          NDK="${{ steps.setup-ndk.outputs.ndk-path }}"
          if grep -q '^android.sdk_path' buildozer.spec; then
            sed -i "s|^android.sdk_path *= *.*|android.sdk_path = ${SDK}|" buildozer.spec
          else
            sed -i "/^\[app\]/a android.sdk_path = ${SDK}" buildozer.spec
          fi
          if grep -q '^android.ndk_path' buildozer.spec; then
            sed -i "s|^android.ndk_path *= *.*|android.ndk_path = ${NDK}|" buildozer.spec
          else
            sed -i "/^\[app\]/a android.ndk_path = ${NDK}" buildozer.spec
          fi

      # Safety net: symlink Buildozer's fallback SDK dir to the real system SDK
      - name: Fallback symlink to system SDK for p4a
        run: |
          set -euxo pipefail
          mkdir -p "$HOME/.buildozer/android/platform"
          if [ ! -e "$HOME/.buildozer/android/platform/android-sdk" ]; then
            ln -s /usr/local/lib/android/sdk "$HOME/.buildozer/android/platform/android-sdk"
          fi

      # 9) Spec hygiene & clean
      - name: Patch buildozer.spec and clean
        run: |
          set -euxo pipefail
          # Pin Build-Tools (prevents attempts to fetch 36)
          sed -i 's/^android.build_tools_version *= *.*/android.build_tools_version = 35.0.0/' buildozer.spec || true
          # Remove non-standard key if present
          sed -i '/^android.gradle_build_tools *= *.*/d' buildozer.spec || true
          # Ensure API is set
          grep -q '^android.api' buildozer.spec || echo 'android.api = 35' >> buildozer.spec
          rm -rf .buildozer bin

      # 10) Verify aidl and toolchain resolution (fast feedback)
      - name: Verify SDK/NDK and AIDL in PATH
        run: |
          set -euxo pipefail
          echo "ANDROIDSDK=$ANDROIDSDK"
          echo "ANDROIDNDK=$ANDROIDNDK"
          ls -1 "$ANDROIDSDK/build-tools" || true
          which sdkmanager || true
          which aidl || true
          aidl --version || true
          which aapt2 || true

      # 11) Build APK
      - name: Build APK (Debug)
        run: |
          set -euxo pipefail
          buildozer -v android debug

      # 12) Upload artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: AddressNavigator-APK-2025
          path: bin/*.apk
          retention-days: 30
