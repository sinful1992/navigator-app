name: Android (Buildozer) â†’ GitHub Release

on:
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Buildozer & Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.buildozer
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      # ðŸ”§ Ensure host cache dirs exist and are writable by container user uid=1000
      - name: Prepare writable cache dirs
        run: |
          mkdir -p "$HOME/.buildozer" "$HOME/.buildozer/cache" "$HOME/.gradle"
          sudo chown -R 1000:1000 "$HOME/.buildozer" "$HOME/.gradle"

      - name: Verify buildozer.spec exists (host)
        run: |
          test -f buildozer.spec || (echo "::error::buildozer.spec not found at repo root"; ls -la; exit 1)

      # Optional: sanity check inside the container
      - name: Container pre-flight check
        run: |
          sudo docker pull ghcr.io/kivy/buildozer:latest
          sudo docker run --rm \
            --entrypoint /bin/sh \
            -w /home/user/app \
            -v "$PWD":/home/user/app \
            ghcr.io/kivy/buildozer:latest \
            -lc 'pwd; ls -la; [ -f buildozer.spec ] && echo "OK: buildozer.spec present" || (echo "MISSING: buildozer.spec"; exit 1)'

      # âœ… Build (image entrypoint is `buildozer`; pass only 'android debug')
      - name: Build APK (debug)
        run: |
          sudo docker run --rm \
            -e BUILDOZER_WARN_ON_ROOT=0 \
            -w /home/user/app \
            -v "$PWD":/home/user/app \
            -v "$HOME/.buildozer":/home/user/.buildozer \
            -v "$HOME/.gradle":/home/user/.gradle \
            ghcr.io/kivy/buildozer:latest \
            android debug

      - name: Locate APK
        id: apk
        run: |
          APK="$(ls -1t bin/*.apk 2>/dev/null | head -n1 || true)"
          if [ -z "$APK" ]; then
            echo "::error::No APK found in bin/. Build likely failed."
            ls -la bin/ || true
            exit 1
          fi
          echo "apk_path=$APK" >> "$GITHUB_OUTPUT"
          echo "Found APK: $APK"

      - name: Create/Upload versioned release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${GITHUB_REF##*/}"
          gh release view "$TAG" >/dev/null 2>&1 || gh release create "$TAG" -t "$TAG" -n "Automated release for $TAG"
          gh release upload "$TAG" "${{ steps.apk.outputs.apk_path }}" --clobber

      - name: Create/Upload nightly pre-release (on main)
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="nightly"
          gh release view "$TAG" >/dev/null 2>&1 || gh release create "$TAG" -p -t "$TAG" -n "Nightly build"
          gh release upload "$TAG" "${{ steps.apk.outputs.apk_path }}" --clobber

      - name: Summary
        run: echo "Uploaded APK: ${{ steps.apk.outputs.apk_path }}"